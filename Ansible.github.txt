

nano README.md

git diff README.md					
#helps you see, compare, and understand changes in your project.

git add README.md						
#adds a change in the working directory to the staging area. It tells Git that you want to include updates to a particular file in the next commit.

or 

git add --all
#add the all files or changes to the repository

git status							
#displays the state of the working directory and the staging area. It lets you see which changes have been staged, which haven't, and which files aren't being tracked by Git

git commit -m "updated readme file, initial commit" 		
#save the updates with a commit. Captures a snapshot of the project's currently staged changes.

git push origin main/master		
#upload local repository content to a remote repository


git pull						
#pull updates from github respository


Ansible---

sudo apt install ansible                                     
#install ansible 

nano Inventory                                                
#create an inventory, that contains the ip address of remote hosts 

ansible all --key-file ~/.ssh/[sshkey] -i [inventory] -m ping
 #runs ansible againt all hosts, using the specified keyfile, -i inventory file(contains hosts), -m run module ping 

nano ansible.cfg                                               #create a configuration file within the ansible directory

#ansible.cfg file content - set defults such as key file(private) and inventory (remote hosts)
    [defaults]
    inventory = Inventory
    private_key_file = ~/.ssh/id_ansible


ansible all --list-hosts
#lists all hosts which will be controlled by ansible 

ansible all -m gather_facts 
#gather information about remote hosts 

ansible all -m gather_facts --limit [ip address] 
#gather information about a singular host 


Running elevated ad-hoc Commands

ansible all -m apt -a update_cahce=ture --become --ask-become-pass 
#equivalent of running sudo apt update 



